# docker-compose.yml
version: "3.8"

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: mysql-con
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: assets
      # MYSQL_USER: root
      # MYSQL_PASSWORD: 1234
    ports:
      - "3306:3306"
    volumes:
      - ./assets.sql:/docker-entrypoint-initdb.d/assets.sql
    networks:
      - assets_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend-con
    restart: unless-stopped
    environment:
      - PORT=4000
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASSWORD=1234
      - DB_NAME=assets
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - CLIENT_URL=http://localhost
      - SERVER_URL=http://localhost
    volumes:
      - ./backend/uploads:/app/uploads
    depends_on:
      - mysql
    networks:
      - assets_network

  # Frontend React/Next.js
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend-con
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost
    depends_on:
      - backend
    networks:
      - assets_network

  # Nginx Reverse Proxy
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: nginx-con
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    networks:
      - assets_network

volumes:
  mysql_data:

networks:
  assets_network:
    driver: bridge
